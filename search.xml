<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vue.js开发环境配置笔记]]></title>
    <url>%2F2019%2F05%2F14%2Fvue-js%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[安装nodejshttp://www.runoob.com/nodejs/nodejs-install-setup.html 基于node.js,利用淘宝npm镜像安装相关依赖在cmd里直接输入：npm install -g cnpm --registry=https://registry.npm.taobao.org，回车，等待安装… 安装全局vue-cli脚手架,用于帮助搭建所需的模板框架在cmd里 1)输入：cnpm install -g vue-cli，回车，等待安装…2).输入：vue，回车，若出现vue信息说明表示成功 创建项目在cmd里输入：vue init webpack vue_test(项目文件夹名)，回车 安装依赖在cmd里 1).输入：cd vue_test（项目名），回车，进入到具体项目文件夹2).输入：cnpm install，回车，等待一小会儿 测试环境是否搭建成功方法1：在cmd里输入：cnpm run dev 方法2：在浏览里输入：localhost:8080(默认端口为8080)]]></content>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习之路-绪论]]></title>
    <url>%2F2019%2F01%2F11%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E7%BB%AA%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[数据结构绪论基本概念和术语数据数据是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。 数据元素数据元素是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。 数据项一个数据元素可以由若干个数据项组成，数据项是数据不可分割的最小单位。 数据对象数据对象是性质相同的数据元素的集合，是数据的子集。 数据结构数据结构是相互之间存在一种或多种特定关系的数据元素的集合。 逻辑结构和物理结构逻辑结构是面向问题的，而物理结构就是面向计算机的，其基本的目标就是将数据及其逻辑关系存储到计算机的内存中。逻辑结构:是指数据对象中数据元素之间的相互关系集合结构：集合结构中的数据元素除同属于一个集合外，他们之间没有其他关系。线性结构：线性结构中的数据元素之间是一对一的关系。树形结构：树形结构中的数据元素之间存在一种一对多的层次关系图形结构：图形结构的数据元素之间是多对多的关系物理结构：是指数据的逻辑结构在计算机中的存储形式，数据元素的存储结构形式有顺序存储和链式存储。顺序存储结构：是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。链式存储结构：是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。抽象数据类型抽象是指抽取出事物具有的普遍性的本质，抽象的意义在于数据类型的数学抽象特性。 1.数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。 2.抽象数据类型（Abstract Data Type,ADT）：是指一个数学模型及定义在该模型上的一组操作。抽象数据类型的定义仅取决于它的一组逻辑特性，而与其在计算机内部如何表示和实现无关。抽象数据类型体现了程序设计中问题分解、抽象和信息隐藏的特性。 3.描述抽象数据类型的标准格式 ADT 抽象数据类型名 Data 数据元素之间逻辑关系的定义 Operation 操作1 初始条件 操作结果描述 操作2 ...... 操作n ...... endADT]]></content>
      <tags>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub+Hexo搭建个人博客全纪录]]></title>
    <url>%2F2019%2F01%2F09%2FGitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[前言很早之前就想过以博客的形式来记录自己的学习历程，最开始学习C语言的时候也在CSDN上写过一段时间的学习笔记。后来想过去搭建一个个人网站方便保存自己的学习笔记，但是一直没有去上手学习相关的东西。最近尝试过一些方法，但最终以GitHub+Hexo的方式实现了我的个人博客雏形。我的第一篇笔记，就记录这次搭建个人博客的全过程。 为什么应该坚持写博客？引自知乎：为什么你要写博客？—陈素封 本人博客地址：December’s Blog搭建流程 网站域名 安装Git GitHub创建个人仓库 安装Node.js 安装Hexo 推送网站 绑定域名 更换主题 发布文章 个性化设置 网站域名域名是网站的入口，有常见的com，cn，net，org等后缀，也有小众的xyz，me，io等后缀。在国内注册域名需要备案，而且备案流程也比较繁杂，时间需要一周左右。为了方便我选择在GoDaddy注册域名，域名注册后，只是拥有了域名的使用权，无法通过域名直接访问网站。所以需要域名解析，这里参考阿里云的域名解析快速入门。 安装gitGit是开源的分布式版本控制系统，用于敏捷高效地处理项目。直接从官网：Git - Downloading Package下载即可。需要了解Git更多的用法，可以参考廖雪峰老师的Git教程。 GitHub创建个人仓库登录到GitHub，如果没有GitHub帐号，使用你的邮箱注册GitHub帐号。点击GitHub中的New repository创建新仓库，仓库名应该为：http://GitHub帐户名.github.io 安装Node.jsHexo基于Node.js，直接官网：Download | Node.js 下载安装即可。安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v ，检测npm是否安装成功，在命令行中输入npm -v ，显示版本号即为安装成功。这里可以使用淘宝镜像$npm install -g cnpm --registry=https://registry.npm.taobao.org这样就可以使用 cnpm 命令来替代npm 关于HexoHexo是一款基于Node.js的快速、 简洁且高效的博客框架。依赖少易于安装使用，是搭建博客的首选框架。Hexo(中文官方网站) 让上百个页面在几秒内瞬间完成渲染。 Hexo支持Github Flavored Markdown的所有功能，甚至可以整合Octopress的大多数插件，并且自己也有用强大的插件系统，可以方便的生成静态网页托管在GitHub和Heroku上。 安装Hexo在自己电脑创建一个文件夹，Hexo框架与发布的网页都将在这个文件夹中。创建好后，在该文件夹打开命令行，$cnpm install -g hexo-cli安装Hexo，安装完成后$hexo init blog初始化博客目录。$hexo g，$hexo s后，打开浏览器输入地址:localhost:4000即可在本地浏览器实时预览。 常见Hexo命令123456789101112cnpm install hexo -g #安装Hexocnpm update hexo -g #升级 hexo init #初始化博客hexo n "我的博客" #新建文章hexo g #生成hexo s #启动服务预览hexo d #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，网页显示异常可尝试该命令。 推送网站配置主题或者更改内容时可以hexo -s在本地实时预览修改，部署到服务器需要hexo -g以及hexo -d，当然在此之前需要配置站点，将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为： 安装Git部署插件，输入命令：npm install hexo-deployer-git --save完成后部署网站：123hexo cleanhexo ghexo d 此时在浏览器输入GitHub仓库地址：http://xxxx.github.io 就可以在网络访问到个人博客。 绑定域名此时在Internet上可以访问我们的网站，但是网址是http://xxxx.github.io 而我们想使用我们自己的个性化域名，就需要绑定域名。之前解析后的域名就可以使用了。第一步，登录GitHub，进入之前创建的仓库，点击Settings在Custom domain输入解析后的域名，save保存。第二步，进入本地博客文件夹根目录，在source文件下创建CNAME，内容写入个人域名，保存格式为全部文件。完成后再次部署网站，此时输入个人域名，便可以在浏览器访问到个人博客。 修改主题Hexo可以更换主题，在主题可以挑选自己的主题，将所选主题下载或者克隆到本地博客文件夹的themes下，打开站点文件_config.yml，修改主题为所选主题即可。1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: 主题名称 例如比较热门的主题next，我的个人博客也是使用next主题，next主题的个性化配置可以参考: hexo搭建个人博客–NexT主题优化Hexo 的 Next 主题默认是首页显示你每篇文章的全文内容，但这会使你的首页篇幅过于冗长，针对这个问题我们可以这么做：用编辑器打开themes/next目录下的_config.yml文件，找到代码： 123auto_excerpt: enable: false length: 150 修改enable为true即可，length为文章预览的文本长度。 发布文章在命令行中输入：hexo n &quot;博客标题&quot;在本地博客文件夹根目录source下便会生成博客标题.md文件，用Markdown编辑器编写，保存后再次推送到网站即可，如果页面显示异常可以使用hexo clean命令。Markdown编辑器个人使用vscode，当然Markdown编辑器和插件很多，其他好用的例如有道云笔记、Atom之类的可以视喜好而定。]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F01%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
